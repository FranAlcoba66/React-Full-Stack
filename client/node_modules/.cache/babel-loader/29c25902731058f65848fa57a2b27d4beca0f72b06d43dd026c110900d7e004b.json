{"ast":null,"code":"var _jsxFileName = \"/home/fran/Desktop/REACT-FULLSTACK/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true; // Track if component is mounted\n    axios.get(\"http://localhost:3001/posts\").then(response => {\n      if (isMounted) {\n        setListOfPosts(response.data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, []); // Empty dependency array to run only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postContainer\",\n    children: listOfPosts.map((value, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      onClick: () => navigate(`/post/${value.id}`),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: value.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: value.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: value.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"mMmaCDclX62D2g8kJ2XjXQ3VQoA=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Home","_s","navigate","listOfPosts","setListOfPosts","isMounted","get","then","response","data","catch","error","console","className","children","map","value","key","onClick","id","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","username","_c","$RefreshReg$"],"sources":["/home/fran/Desktop/REACT-FULLSTACK/client/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Home.css\";\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [listOfPosts, setListOfPosts] = useState([]);\n\n  useEffect(() => {\n    let isMounted = true; // Track if component is mounted\n    axios.get(\"http://localhost:3001/posts\")\n      .then((response) => {\n        if (isMounted) {\n          setListOfPosts(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts:\", error);\n      });\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, []); // Empty dependency array to run only once\n\n  return (\n    <div className=\"postContainer\">\n      {listOfPosts.map((value, key) => (\n        <div\n          className=\"post\"\n          key={key}\n          onClick={() => navigate(`/post/${value.id}`)}\n        >\n          <div className=\"title\">{value.title}</div>\n          <div className=\"body\">{value.postText}</div>\n          <div className=\"footer\">{value.username}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,GAAG,IAAI,CAAC,CAAC;IACtBT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIH,SAAS,EAAE;QACbD,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC/B;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;IAEJ,OAAO,MAAM;MACXN,SAAS,GAAG,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BX,WAAW,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAC1BlB,OAAA;MACEc,SAAS,EAAC,MAAM;MAEhBK,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAAC,SAASc,KAAK,CAACG,EAAE,EAAE,CAAE;MAAAL,QAAA,gBAE7Cf,OAAA;QAAKc,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEE,KAAK,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1CzB,OAAA;QAAKc,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEE,KAAK,CAACS;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5CzB,OAAA;QAAKc,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAEE,KAAK,CAACU;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GALzCP,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAML,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CApCQD,IAAI;EAAA,QACMH,WAAW;AAAA;AAAA8B,EAAA,GADrB3B,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}