{"ast":null,"code":"var _jsxFileName = \"/home/fran/Desktop/REACT-FULLSTACK/client/src/pages/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState({});\n  useEffect(() => {\n    let isMounted = true; // Track if component is mounted\n\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      if (isMounted) {\n        setPostObject(response.data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching post:\", error);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      if (isMounted) {\n        setComments(response.data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [id]); // Add dependency array with id\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: postObject.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postText\",\n        children: postObject.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: postObject.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: comment.commentBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"BeCG6RZR34M7z9WxJopTkefT8tE=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Post","_s","id","postObject","setPostObject","comments","setComments","isMounted","get","then","response","data","catch","error","console","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","username","type","placeholder","autoComplete","map","comment","key","commentBody","_c","$RefreshReg$"],"sources":["/home/fran/Desktop/REACT-FULLSTACK/client/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Post() {\n  let { id } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState({});\n\n  useEffect(() => {\n    let isMounted = true; // Track if component is mounted\n\n    axios\n      .get(`http://localhost:3001/posts/byId/${id}`)\n      .then((response) => {\n        if (isMounted) {\n          setPostObject(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching post:\", error);\n      });\n\n    axios\n      .get(`http://localhost:3001/comments/${id}`)\n      .then((response) => {\n        if (isMounted) {\n          setComments(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching comments:\", error);\n      });\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [id]); // Add dependency array with id\n\n  return (\n    <div className=\"postPage\">\n      <div className=\"leftSide\">\n        <div className=\"postTitle\">{postObject.title}</div>\n        <div className=\"postText\">{postObject.postText}</div>\n        <div className=\"footer\">{postObject.username}</div>\n      </div>\n      <div className=\"rightSide\">\n        <div className=\"addCommentContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Comment...\"\n            autoComplete=\"off\"\n          ></input>\n          <button type=\"button\">Add Comment</button>\n        </div>\n        <div className=\"listOfComments\">\n          {comments.map((comment, key) => (\n            <div key={key} className=\"comment\">\n              <div className=\"commentBody\">{comment.commentBody}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}