{"ast":null,"code":"var _jsxFileName = \"/home/fran/Desktop/REACT-FULLSTACK/client/src/pages/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    let isMounted = true; // Track if component is mounted\n\n    const fetchPost = async () => {\n      try {\n        const postResponse = await axios.get(`http://localhost:3001/posts/byId/${id}`);\n        if (isMounted) {\n          setPostObject(postResponse.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n    const fetchComments = async () => {\n      try {\n        const commentsResponse = await axios.get(`http://localhost:3001/comments/${id}`);\n        if (isMounted) {\n          setComments(commentsResponse.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching comments:\", error);\n      }\n    };\n    fetchPost();\n    fetchComments();\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [id]); // Add dependency array with id\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: postObject.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postText\",\n        children: postObject.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: postObject.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: comment.commentBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentFooter\",\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"55NORvn6UY9aTU9+1OgF3vstlf0=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Post","_s","id","postObject","setPostObject","comments","setComments","isMounted","fetchPost","postResponse","get","data","error","console","fetchComments","commentsResponse","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","username","type","placeholder","autoComplete","map","comment","key","commentBody","_c","$RefreshReg$"],"sources":["/home/fran/Desktop/REACT-FULLSTACK/client/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Post() {\n  let { id } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    let isMounted = true; // Track if component is mounted\n\n    const fetchPost = async () => {\n      try {\n        const postResponse = await axios.get(\n          `http://localhost:3001/posts/byId/${id}`\n        );\n        if (isMounted) {\n          setPostObject(postResponse.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const commentsResponse = await axios.get(\n          `http://localhost:3001/comments/${id}`\n        );\n        if (isMounted) {\n          setComments(commentsResponse.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching comments:\", error);\n      }\n    };\n\n    fetchPost();\n    fetchComments();\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [id]); // Add dependency array with id\n\n  return (\n    <div className=\"postPage\">\n      <div className=\"leftSide\">\n        <div className=\"postTitle\">{postObject.title}</div>\n        <div className=\"postText\">{postObject.postText}</div>\n        <div className=\"footer\">{postObject.username}</div>\n      </div>\n      <div className=\"rightSide\">\n        <div className=\"addCommentContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Comment...\"\n            autoComplete=\"off\"\n          ></input>\n          <button type=\"button\">Add Comment</button>\n        </div>\n        <div className=\"listOfComments\">\n          {comments.map((comment, key) => (\n            <div key={key} className=\"comment\">\n              <div className=\"commentBody\">{comment.commentBody}</div>\n              <div className=\"commentFooter\">{comment.username}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}